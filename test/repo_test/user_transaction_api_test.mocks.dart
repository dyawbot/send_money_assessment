// Mocks generated by Mockito 5.4.4 from annotations
// in send_money_assessment/test/repo_test/user_transaction_api_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:internet_connection_checker/internet_connection_checker.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:send_money_assessment/features/data/models/api/user_transaction_api.dart'
    as _i4;
import 'package:send_money_assessment/features/data/models/dao/user_transaction_dao.dart'
    as _i6;
import 'package:send_money_assessment/features/data/models/dto/user_transaction_dto.dart'
    as _i2;
import 'package:send_money_assessment/features/domain/entities/user_transaction_entity.dart'
    as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserTransactionDto_0 extends _i1.SmartFake
    implements _i2.UserTransactionDto {
  _FakeUserTransactionDto_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDataTransactionDto_1 extends _i1.SmartFake
    implements _i2.UserDataTransactionDto {
  _FakeUserDataTransactionDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDuration_2 extends _i1.SmartFake implements Duration {
  _FakeDuration_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddressCheckResult_3 extends _i1.SmartFake
    implements _i3.AddressCheckResult {
  _FakeAddressCheckResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserTransactionApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserTransactionApi extends _i1.Mock
    implements _i4.UserTransactionApi {
  MockUserTransactionApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.UserTransactionDto> createTransaction(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTransaction,
          [body],
        ),
        returnValue:
            _i5.Future<_i2.UserTransactionDto>.value(_FakeUserTransactionDto_0(
          this,
          Invocation.method(
            #createTransaction,
            [body],
          ),
        )),
      ) as _i5.Future<_i2.UserTransactionDto>);

  @override
  _i5.Future<_i2.UserDataTransactionDto> getAllTransactions(
          Map<String, dynamic>? body) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllTransactions,
          [body],
        ),
        returnValue: _i5.Future<_i2.UserDataTransactionDto>.value(
            _FakeUserDataTransactionDto_1(
          this,
          Invocation.method(
            #getAllTransactions,
            [body],
          ),
        )),
      ) as _i5.Future<_i2.UserDataTransactionDto>);
}

/// A class which mocks [UserTransactionDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserTransactionDao extends _i1.Mock
    implements _i6.UserTransactionDao {
  MockUserTransactionDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<List<_i7.UserTransactionEntity>> getAllLocalData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllLocalData,
          [],
        ),
        returnValue: _i5.Stream<List<_i7.UserTransactionEntity>>.empty(),
      ) as _i5.Stream<List<_i7.UserTransactionEntity>>);

  @override
  _i5.Future<void> insert(_i7.UserTransactionEntity? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertAll(List<_i7.UserTransactionEntity>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAll,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [UserWalletAmountDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserWalletAmountDao extends _i1.Mock
    implements _i6.UserWalletAmountDao {
  MockUserWalletAmountDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i7.UserWalletAmountEntity?> getTheWalletAmount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTheWalletAmount,
          [],
        ),
        returnValue: _i5.Future<_i7.UserWalletAmountEntity?>.value(),
      ) as _i5.Future<_i7.UserWalletAmountEntity?>);

  @override
  _i5.Stream<_i7.UserWalletAmountEntity?> updateAmount(String? walletAmount) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAmount,
          [walletAmount],
        ),
        returnValue: _i5.Stream<_i7.UserWalletAmountEntity?>.empty(),
      ) as _i5.Stream<_i7.UserWalletAmountEntity?>);

  @override
  _i5.Future<void> insert(_i7.UserWalletAmountEntity? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> insertAll(List<_i7.UserWalletAmountEntity>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertAll,
          [data],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i3.InternetConnectionChecker {
  MockInternetConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Duration get checkInterval => (super.noSuchMethod(
        Invocation.getter(#checkInterval),
        returnValue: _FakeDuration_2(
          this,
          Invocation.getter(#checkInterval),
        ),
      ) as Duration);

  @override
  Duration get checkTimeout => (super.noSuchMethod(
        Invocation.getter(#checkTimeout),
        returnValue: _FakeDuration_2(
          this,
          Invocation.getter(#checkTimeout),
        ),
      ) as Duration);

  @override
  List<_i3.AddressCheckOptions> get addresses => (super.noSuchMethod(
        Invocation.getter(#addresses),
        returnValue: <_i3.AddressCheckOptions>[],
      ) as List<_i3.AddressCheckOptions>);

  @override
  set addresses(List<_i3.AddressCheckOptions>? value) => super.noSuchMethod(
        Invocation.setter(
          #addresses,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<bool> get hasConnection => (super.noSuchMethod(
        Invocation.getter(#hasConnection),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.InternetConnectionStatus> get connectionStatus =>
      (super.noSuchMethod(
        Invocation.getter(#connectionStatus),
        returnValue: _i5.Future<_i3.InternetConnectionStatus>.value(
            _i3.InternetConnectionStatus.connected),
      ) as _i5.Future<_i3.InternetConnectionStatus>);

  @override
  _i5.Stream<_i3.InternetConnectionStatus> get onStatusChange =>
      (super.noSuchMethod(
        Invocation.getter(#onStatusChange),
        returnValue: _i5.Stream<_i3.InternetConnectionStatus>.empty(),
      ) as _i5.Stream<_i3.InternetConnectionStatus>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get isActivelyChecking => (super.noSuchMethod(
        Invocation.getter(#isActivelyChecking),
        returnValue: false,
      ) as bool);

  @override
  _i5.Future<_i3.AddressCheckResult> isHostReachable(
          _i3.AddressCheckOptions? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #isHostReachable,
          [options],
        ),
        returnValue:
            _i5.Future<_i3.AddressCheckResult>.value(_FakeAddressCheckResult_3(
          this,
          Invocation.method(
            #isHostReachable,
            [options],
          ),
        )),
      ) as _i5.Future<_i3.AddressCheckResult>);
}
